"use strict";

var path = require("path"),
    detective = require("detective"),
    _require = require("../utils"),
    readFileSync = _require.readFileSync;


var extensionsIgnoredForPreload = [".json"];
var isExtensionIgnored = function isExtensionIgnored(ext) {
  return extensionsIgnoredForPreload.filter(function (_ext) {
    return ext === _ext;
  }).length > 0;
};

var findRequires = function findRequires(source, filename) {
  if (detectiveCache[filename]) {
    return detectiveCache[filename];
  }

  return detectiveCache[filename] = detective.find(source);
};

var detectiveCache = {};

module.exports = function (precompiler) {
  return function _preload(filename) {
    var source = void 0,
        nextPwd = void 0,
        target = void 0,
        isIndexModule = void 0,
        fullPath = void 0;

    var extName = path.extname(filename),
        hasExt = extName && extName !== "";

    fullPath = filename;

    try {
      if (hasExt) {
        source = readFileSync(fullPath, "utf-8");
      } else {
        fullPath = filename + ".js";
        source = readFileSync(fullPath, "utf-8");
      }
    } catch (e) {
      isIndexModule = true;
      fullPath = filename + "/index.js";
      source = readFileSync(fullPath, "utf-8");
    }

    nextPwd = path.dirname(fullPath);

    if (detectiveCache[fullPath] || hasExt && isExtensionIgnored(extName)) {
      return;
    }

    source = precompiler(source, fullPath);

    findRequires(source, fullPath).strings.forEach(function (module) {
      if (module.indexOf(".") === 0) {
        _preload(path.join(nextPwd, module));
      } else {

        //TODO: Preload npm packages

      }
    });
  };
};